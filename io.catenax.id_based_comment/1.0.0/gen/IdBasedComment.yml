---
openapi: 3.0.3
info:
  title: Id Based Comment
  version: v1
servers:
- url: catenax.io/api/v1
  variables:
    api-version:
      default: v1
paths:
  /{tenant-id}/id-based-comment:
    get:
      tags:
      - IdBasedComment
      operationId: getIdBasedComment
      parameters:
      - name: tenant-id
        in: path
        description: The ID of the tenant owning the requested Twin.
        required: true
        schema:
          type: string
          format: uuid
      - name: start
        in: query
        description: Starting index which is starting by 0
        required: false
        schema:
          type: number
      - name: count
        in: query
        description: Number of items to return per call.
        required: false
        schema:
          type: number
      - name: totalItemCount
        in: query
        description: Flag that indicates that the total counts should be returned.
        required: false
        schema:
          type: boolean
      responses:
        "200":
          $ref: '#/components/responses/IdBasedComment'
        "401":
          $ref: '#/components/responses/ClientError'
        "402":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFoundError'
components:
  schemas:
    ErrorResponse:
      type: object
      required:
      - error
      properties:
        error:
          $ref: '#/components/schemas/Error'
    Error:
      type: object
      required:
      - details
      properties:
        message:
          type: string
          minLength: 1
        path:
          type: string
          minLength: 1
        details:
          type: object
          minLength: 1
          additionalProperties:
            type: object
        code:
          type: string
          nullable: true
    PagingSchema:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/IdBasedComment'
        totalItems:
          type: number
        totalPages:
          type: number
        pageSize:
          type: number
        currentPage:
          type: number
    urn_samm_io.catenax.shared.uuid_1.0.0_UuidV4Trait:
      type: string
      description: "The provided regular expression ensures that the UUID is composed\
        \ of five groups of characters separated by hyphens, in the form 8-4-4-4-12\
        \ for a total of 36 characters (32 hexadecimal characters and 4 hyphens),\
        \ optionally prefixed by \"urn:uuid:\" to make it an IRI."
      pattern: "(^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$)|(^urn:uuid:[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$)"
    urn_samm_io.catenax.id_based_comment_1.0.0_AuthorCharacteristic:
      type: string
      description: Characteristic for an E-Mail or a BPNL
    urn_samm_io.catenax.id_based_comment_1.0.0_Timestamp:
      type: string
      format: date-time
      description: Point in time.
    urn_samm_io.catenax.id_based_comment_1.0.0_CommentTrait:
      type: string
      description: The provided regular expression ensures that the text of a comment
        is limited to the maximum length of 5.000 characters.
      pattern: "^[\\s\\S]{0,5000}$"
    urn_samm_io.catenax.id_based_comment_1.0.0_CommentTypeCharacteristic:
      type: string
      description: The classification of a comment.
      enum:
      - information
      - warning
      - default
      - actionRequired
    urn_samm_org.eclipse.esmf.samm_characteristic_2.1.0_Boolean:
      type: boolean
      description: Represents a boolean value (i.e. a "flag").
    urn_samm_io.catenax.id_based_comment_1.0.0_ListOfReferenceDatesCharacteristic:
      description: Point in time.
      type: array
      items:
        type: string
        format: date
      uniqueItems: true
    urn_samm_io.catenax.id_based_comment_1.0.0_ObjectTypeCharacteristic:
      type: string
      description: Defining a string value for the objectType.
    urn_samm_io.catenax.shared.business_partner_number_1.0.0_BpnlTrait:
      type: string
      description: "The provided regular expression ensures that the BPNL is composed\
        \ of prefix 'BPNL', 10 digits and two uppercase letters."
      pattern: "^BPNL[0-9]{8}[a-zA-Z0-9]{4}$"
    IdBasedComment:
      description: Aspect model for an exchange of comment belonging to a entity.
      type: object
      properties:
        commentId:
          description: The Comment ID uniquely identifies the entity within the business
            relationship between a customer and its supplier.
          $ref: '#/components/schemas/urn_samm_io.catenax.shared.uuid_1.0.0_UuidV4Trait'
        objectId:
          description: The ID of the object to which the comment belongs.
          $ref: '#/components/schemas/urn_samm_io.catenax.shared.uuid_1.0.0_UuidV4Trait'
        author:
          description: "The E-Mail address of the creator who wrote the comment. In\
            \ case comment creator wants to stay anonymous, show BPNL in app which\
            \ is sent the comment along."
          $ref: '#/components/schemas/urn_samm_io.catenax.id_based_comment_1.0.0_AuthorCharacteristic'
        postedAt:
          description: Point in time when the comment was created.
          $ref: '#/components/schemas/urn_samm_io.catenax.id_based_comment_1.0.0_Timestamp'
        changedAt:
          description: Point in time when the comment was last changed.
          $ref: '#/components/schemas/urn_samm_io.catenax.id_based_comment_1.0.0_Timestamp'
        commentText:
          description: Text up to 5.000 characters in format "UTF-8" will be shared.
          $ref: '#/components/schemas/urn_samm_io.catenax.id_based_comment_1.0.0_CommentTrait'
        commentType:
          description: Type of a comment to indicate a priority.
          $ref: '#/components/schemas/urn_samm_io.catenax.id_based_comment_1.0.0_CommentTypeCharacteristic'
        requestDelete:
          description: Indicates that the deletion of the comment is requested by
            sender incl. all of it's history.
          $ref: '#/components/schemas/urn_samm_org.eclipse.esmf.samm_characteristic_2.1.0_Boolean'
        listOfReferenceDates:
          description: Point in time the comment belongs to.
          $ref: '#/components/schemas/urn_samm_io.catenax.id_based_comment_1.0.0_ListOfReferenceDatesCharacteristic'
        objectType:
          description: Aspect Model which the comment refers to. The value MUST consist
            of the Catena-X aspect model unique identifier of the referenced data
            model without a version.
          $ref: '#/components/schemas/urn_samm_io.catenax.id_based_comment_1.0.0_ObjectTypeCharacteristic'
        customer:
          description: The Business Partner Number Legal Entity (BPNL) of the party
            requesting materials from a supplier.
          $ref: '#/components/schemas/urn_samm_io.catenax.shared.business_partner_number_1.0.0_BpnlTrait'
        supplier:
          description: The Business Partner Number Legal Entity (BPNL) of the party
            providing materials to a customer.
          $ref: '#/components/schemas/urn_samm_io.catenax.shared.business_partner_number_1.0.0_BpnlTrait'
      required:
      - commentId
      - objectId
      - objectType
      - customer
      - supplier
  responses:
    Unauthorized:
      description: The requesting user or client is not authenticated.
    Forbidden:
      description: The requesting user or client is not authorized to access resources
        for the given tenant.
    NotFoundError:
      description: The requested Twin has not been found.
    ClientError:
      description: Payload or user input is invalid. See error details in the payload
        for more.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    IdBasedComment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PagingSchema'
      description: The request was successful.
  requestBodies:
    IdBasedComment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IdBasedComment'
