---
openapi: 3.0.3
info:
  title: return request
  version: v1
  x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#ReturnRequest"
servers:
- url: catenax.io/api/v1
  variables:
    api-version:
      default: v1
paths:
  /{tenant-id}/return-request:
    get:
      tags:
      - ReturnRequest
      operationId: getReturnRequest
      parameters:
      - name: tenant-id
        in: path
        description: The ID of the tenant owning the requested Twin.
        required: true
        schema:
          type: string
          format: uuid
      - name: start
        in: query
        description: Starting index which is starting by 0
        required: false
        schema:
          type: number
      - name: count
        in: query
        description: Number of items to return per call.
        required: false
        schema:
          type: number
      - name: totalItemCount
        in: query
        description: Flag that indicates that the total counts should be returned.
        required: false
        schema:
          type: boolean
      responses:
        "200":
          $ref: "#/components/responses/ReturnRequest"
        "400":
          $ref: "#/components/responses/ClientError"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFoundError"
components:
  schemas:
    ErrorResponse:
      type: object
      required:
      - error
      properties:
        error:
          $ref: "#/components/schemas/Error"
    Error:
      type: object
      required:
      - details
      properties:
        message:
          type: string
          minLength: 1
        path:
          type: string
          minLength: 1
        details:
          type: object
          minLength: 1
          additionalProperties:
            type: object
        code:
          type: string
          nullable: true
    PagingSchema:
      type: object
      properties:
        items:
          type: array
          $ref: "#/components/schemas/ReturnRequest"
        totalItems:
          type: number
        totalPages:
          type: number
        pageSize:
          type: number
        currentPage:
          type: number
    Boolean:
      type: boolean
      x-samm-aspect-model-urn: "urn:samm:org.eclipse.esmf.samm:characteristic:2.2.0#Boolean"
      description: Represents a boolean value (i.e. a "flag").
    Text:
      type: string
      x-samm-aspect-model-urn: "urn:samm:org.eclipse.esmf.samm:characteristic:2.2.0#Text"
      description: "Describes a Property which contains plain text. This is intended\
        \ exclusively for human readable strings, not for identifiers, measurement\
        \ values, etc."
    DateTimestamp:
      type: string
      format: date
      x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#DateTimestamp"
      description: Timestamp for dates
    ProductConditionsCharacteristic:
      description: Criteria describing the state of a product on the marketplace.
      x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#ProductConditionsCharacteristic"
      type: object
      properties:
        missingParts:
          description: "Completeness of the product, e.g. missing parts are not acceptable."
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#missingParts"
          $ref: "#/components/schemas/Boolean"
        dismantled:
          description: Information on whether the product has been dismantled.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#dismantled"
          $ref: "#/components/schemas/Boolean"
        mechanicalDamage:
          description: "Information on mechanical damage to the part, e.g. two broken\
            \ ribs or part deformation indicate mechanical damage."
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#mechanicalDamage"
          $ref: "#/components/schemas/Boolean"
        corroded:
          description: Information on whether the product has corrosion.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#corroded"
          $ref: "#/components/schemas/Boolean"
        discolored:
          description: Information on whether the product has been discoloured.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#discolored"
          $ref: "#/components/schemas/Boolean"
    QuantityCharacteristic:
      type: number
      x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#QuantityCharacteristic"
      description: Characteristic describing the quantity
    Timestamp:
      type: string
      pattern: "-?([1-9][0-9]{3,}|0[0-9]{3})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\\
        .[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?"
      x-samm-aspect-model-urn: "urn:samm:org.eclipse.esmf.samm:characteristic:2.2.0#Timestamp"
      description: Describes a Property which contains the date and time with an optional
        timezone.
    TimePeriodEntity:
      description: Entity defining a range of dates to define a time period.
      x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#TimePeriodEntity"
      type: object
      properties:
        startDate:
          description: The first day of the period
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#startDate"
          $ref: "#/components/schemas/Timestamp"
        endDate:
          description: The last day of the period.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#endDate"
          $ref: "#/components/schemas/Timestamp"
      required:
      - startDate
      - endDate
    TimePeriod:
      description: Depicts a time period by specifying start and end date
      x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#TimePeriod"
      type: array
      items:
        $ref: "#/components/schemas/TimePeriodEntity"
      uniqueItems: true
    ValueCharacteristic:
      type: number
      x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#ValueCharacteristic"
      description: Characteristic to describe the value in a float type.
    CurrencyTrait:
      type: string
      x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#CurrencyTrait"
      description: reduces the possible entry to three entries from A-Z
      pattern: "^[A-Z]{3}$"
    PriceCharacteristic:
      description: Characteristic to describe the price. Different currencies are
        possible
      x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#PriceCharacteristic"
      type: object
      properties:
        value:
          description: The nominal value.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#value"
          $ref: "#/components/schemas/ValueCharacteristic"
        currency:
          description: Currency of the price of the return request conform to the
            ISO4217 in numerical codes.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#currency"
          $ref: "#/components/schemas/CurrencyTrait"
      required:
      - value
      - currency
    PriceRangeCharacteristic:
      description: Characteristic to define range of monetary values.
      x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#PriceRangeCharacteristic"
      type: object
      properties:
        minPrice:
          description: The minimum price that a buyer is ready to pay to get an item
            (motivating sellers to sell).
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#minPrice"
          $ref: "#/components/schemas/PriceCharacteristic"
        maxPrice:
          description: The maximum price until which a demand request is relevant.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#maxPrice"
          $ref: "#/components/schemas/PriceCharacteristic"
      required:
      - maxPrice
    ReturnRequest:
      description: Aspect to indicate if there is a return request for a product.
      type: object
      x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#ReturnRequest"
      properties:
        needsReturn:
          description: "Describes the fact whether a vehicle, assembly or part needs\
            \ to be returned to requestor."
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#needsReturn"
          $ref: "#/components/schemas/Boolean"
        returnConditions:
          description: "Describes WHY a vehicle, assembly or part needs to be returned\
            \ to the requestor and under which conditions."
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#returnConditions"
          $ref: "#/components/schemas/Text"
        requestDate:
          description: Describes date when the return request was placed in GMT timezone.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#requestDate"
          $ref: "#/components/schemas/DateTimestamp"
        latestReturnDate:
          description: Describes until when the return request is valid in GMT timezone.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#latestReturnDate"
          $ref: "#/components/schemas/DateTimestamp"
        productConditions:
          description: textual description of the product conditions
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#productConditions"
          $ref: "#/components/schemas/ProductConditionsCharacteristic"
        title:
          description: The request name to be used by the buyer to navigate through
            the list of demand requests.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#title"
          $ref: "#/components/schemas/Text"
        marketplaceProduct:
          description: The description of the product within the marketplace that
            might differ from the digital twin.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#marketplaceProduct"
          $ref: "#/components/schemas/Text"
        quantity:
          description: The desired quantity of the on the marketplace offered product
            in SKU.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#quantity"
          $ref: "#/components/schemas/QuantityCharacteristic"
        unitOfMeasure:
          description: The unit of measure (related to quantity).
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#unitOfMeasure"
          $ref: "#/components/schemas/Text"
        validityPeriod:
          description: Specifies the time period when the need exists
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#validityPeriod"
          $ref: "#/components/schemas/TimePeriod"
        priceRange:
          description: Range of monetary values.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#priceRange"
          $ref: "#/components/schemas/PriceRangeCharacteristic"
        isRecall:
          description: Depicts if the manufacturer issued a recall (e.g. for security
            reasons). In concjunction with property needsReturn it can be expressed
            if the item has to be returned or can directly be destroyed.
          x-samm-aspect-model-urn: "urn:samm:io.catenax.return_request:1.1.1#isRecall"
          $ref: "#/components/schemas/Boolean"
      required:
      - needsReturn
      - returnConditions
      - requestDate
      - latestReturnDate
      - productConditions
      - title
      - marketplaceProduct
      - quantity
      - unitOfMeasure
      - validityPeriod
      - priceRange
      - isRecall
  responses:
    Unauthorized:
      description: The requesting user or client is not authenticated.
    Forbidden:
      description: The requesting user or client is not authorized to access resources.
    NotFoundError:
      description: The requested resource has not been found.
    ClientError:
      description: Payload or user input is invalid. See error details in the payload
        for more information.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ReturnRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PagingSchema"
      description: The request was successful.
  requestBodies:
    ReturnRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReturnRequest"
      required: true
