#######################################################################
# Copyright (c) 2022 SupplyOn AG
# Copyright (c) Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This work is made available under the terms of the
# Creative Commons Attribution 4.0 International (CC-BY-4.0) license,
# which is available at
# https://creativecommons.org/licenses/by/4.0/legalcode.
#
# SPDX-License-Identifier: CC-BY-4.0
#######################################################################

@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.
@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.
@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.
@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <urn:bamm:io.catenax.esr_certificates.esr_certificate_state_statistic:1.0.1#>.

:certificateName a bamm:Property;
    bamm:name "certificateName";
    bamm:preferredName "Certificate Name"@en;
    bamm:description "Name of the Environmental and Social Responsibility (ESR) certificate"@en;
    bamm:characteristic :CertficateName;
    bamm:exampleValue "ISO 14001".
:CertficateName a bamm-c:Enumeration;
    bamm:name "CertficateName";
    bamm:description "String without language tags"@en;
    bamm:dataType xsd:string;
    bamm-c:values ("ISO 14001").
:certificateStateStatistic a bamm:Property;
    bamm:name "certificateStateStatistic";
    bamm:preferredName "Certificate State Statistic"@en;
    bamm:description "Environmental and Social Responsibility (ESR) certificate state statistic"@en;
    bamm:characteristic :CertificateStateStatistic.
:CertificateStateStatistic a bamm:Characteristic;
    bamm:name "CertificateStateStatistic";
    bamm:dataType :CertificateStateStatisticEntity.
:CertificateStateStatisticEntity a bamm:Entity;
    bamm:name "CertificateStateStatisticEntity";
    bamm:properties (:certificatesWithStateValid :certificatesWithStateInvalid :certificatesWithStateUnknown :certificatesWithStateExceptional).
:certificatesWithStateValid a bamm:Property;
    bamm:name "certificatesWithStateValid";
    bamm:preferredName "Certificates With State Valid"@en;
    bamm:description "Number of certificates with state valid"@en;
    bamm:characteristic :CertificatesWithStateValue;
    bamm:exampleValue "10"^^xsd:nonNegativeInteger.
:certificatesWithStateInvalid a bamm:Property;
    bamm:name "certificatesWithStateInvalid";
    bamm:preferredName "Certificates With State Invalid"@en;
    bamm:description "Number of certificates with state invalid"@en;
    bamm:characteristic :CertificatesWithStateValue;
    bamm:exampleValue "11"^^xsd:nonNegativeInteger.
:certificatesWithStateUnknown a bamm:Property;
    bamm:name "certificatesWithStateUnknown";
    bamm:preferredName " Certificates With State Unknown"@en;
    bamm:description "Number of certificates with state unknown"@en;
    bamm:characteristic :CertificatesWithStateValue;
    bamm:exampleValue "3"^^xsd:nonNegativeInteger.
:certificatesWithStateExceptional a bamm:Property;
    bamm:name "certificatesWithStateExceptional";
    bamm:preferredName "Certificates With State Exceptional"@en;
    bamm:description "Number of certificates with state exceptional"@en;
    bamm:characteristic :CertificatesWithStateValue;
    bamm:exampleValue "1"^^xsd:nonNegativeInteger.
:CertificatesWithStateValue a bamm:Characteristic;
    bamm:name "CertificatesWithStateValue";
    bamm:dataType xsd:nonNegativeInteger.
:EsrCertificateStateStatistic a bamm:Aspect;
    bamm:name "EsrCertificateStateStatistic";
    bamm:preferredName "ESR Certificate StateS tatistic"@en;
    bamm:description "State statistic for an Environmental and Social Responsibility (ESR) certificate"@en;
    bamm:properties (:certificateName :certificateStateStatistic);
    bamm:operations ();
    bamm:events ().
